{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Validators, FormBuilder, FormControl } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { AuthService } from '../services/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"@ionic/angular\";\nexport let AuthLoginComponent = /*#__PURE__*/(() => {\n  class AuthLoginComponent {\n    constructor(formBuilder, auth, modal) {\n      this.formBuilder = formBuilder;\n      this.auth = auth;\n      this.modal = modal;\n    }\n\n    ngOnInit() {\n      this.loginForm = this.formBuilder.group({\n        password: new FormControl('', Validators.required),\n        email: new FormControl('', Validators.compose([Validators.required, Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')]))\n      });\n    }\n\n    onSubmit($event) {\n      return __awaiter(this, void 0, void 0, function* () {\n        $event.preventDefault();\n\n        if (!this.loginForm.valid) {\n          return;\n        }\n\n        this.auth.login(this.loginForm.controls.email.value, this.loginForm.controls.password.value).then(user => {\n          this.modal.dismiss();\n        }).catch(e => {\n          this.error = e.statusText;\n          throw e;\n        });\n      });\n    }\n\n  }\n\n  AuthLoginComponent.ɵfac = function AuthLoginComponent_Factory(t) {\n    return new (t || AuthLoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.ModalController));\n  };\n\n  AuthLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AuthLoginComponent,\n    selectors: [[\"app-auth-login\"]],\n    decls: 12,\n    vars: 3,\n    consts: [[3, \"formGroup\", \"submit\"], [\"position\", \"floating\", \"color\", \"primary\"], [\"type\", \"text\", \"formControlName\", \"email\", \"required\", \"\"], [\"type\", \"password\", \"formControlName\", \"password\", \"required\", \"\"], [\"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"]],\n    template: function AuthLoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"submit\", function AuthLoginComponent_Template_form_submit_0_listener($event) {\n          return ctx.onSubmit($event);\n        });\n        i0.ɵɵelementStart(1, \"ion-item\")(2, \"ion-label\", 1);\n        i0.ɵɵtext(3, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"ion-input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"ion-item\")(6, \"ion-label\", 1);\n        i0.ɵɵtext(7, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"ion-input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"ion-button\", 4);\n        i0.ɵɵtext(10, \" Log In \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.error, \"\\n\");\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i3.IonButton, i3.IonInput, i3.IonItem, i3.IonLabel, i3.TextValueAccessor, i1.FormGroupDirective, i1.FormControlName]\n  });\n  return AuthLoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}