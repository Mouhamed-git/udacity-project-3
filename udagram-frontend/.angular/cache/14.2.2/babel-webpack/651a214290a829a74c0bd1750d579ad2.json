{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { BehaviorSubject } from 'rxjs';\nimport { ApiService } from 'src/app/api/api.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/api/api.service\";\nconst JWT_LOCALSTORE_KEY = 'jwt';\nconst USER_LOCALSTORE_KEY = 'user';\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(api) {\n      this.api = api;\n      this.currentUser$ = new BehaviorSubject(null);\n      this.initToken();\n    }\n\n    initToken() {\n      const token = localStorage.getItem(JWT_LOCALSTORE_KEY);\n      const user = JSON.parse(localStorage.getItem(USER_LOCALSTORE_KEY));\n\n      if (token && user) {\n        this.setTokenAndUser(token, user);\n      }\n    }\n\n    setTokenAndUser(token, user) {\n      localStorage.setItem(JWT_LOCALSTORE_KEY, token);\n      localStorage.setItem(USER_LOCALSTORE_KEY, JSON.stringify(user));\n      this.api.setAuthToken(token);\n      this.currentUser$.next(user);\n    }\n\n    login(email, password) {\n      return __awaiter(this, void 0, void 0, function* () {\n        return this.api.post('/users/auth/login', {\n          email: email,\n          password: password\n        }).then(res => {\n          this.setTokenAndUser(res.token, res.user);\n          return res;\n        }).catch(e => {\n          throw e;\n        }); // return user !== undefined;\n      });\n    }\n\n    logout() {\n      this.setTokenAndUser(null, null);\n      return true;\n    }\n\n    register(user, password) {\n      return this.api.post('/users/auth/', {\n        email: user.email,\n        password: password\n      }).then(res => {\n        this.setTokenAndUser(res.token, res.user);\n        return res;\n      }).catch(e => {\n        throw e;\n      });\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.ApiService));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}